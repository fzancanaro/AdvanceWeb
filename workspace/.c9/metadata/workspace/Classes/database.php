{"changed":true,"filter":false,"title":"database.php","tooltip":"/Classes/database.php","value":"<?php\n//this class uses parameterised query to mitigate\n//SQL injection attacks. Instead of accepting a string as a query\n//including its parameters, it accepts a query string containing ? in\n//place of the parameters\n//eg \"SELECT * FROM accounts WHERE account_id = ?\"\n//Then (a)  parameter is passed to the database to replace the question mark\nclass Database{\n  private $connection;\n  private $output = array();\n  private $params = array();\n  \n  //database credentials and details\n  private $user = \"website\";\n  private $password = \"password\";\n  private $host =\"localhost\";\n  private $db = \"datastore\";\n  \n  //--__construct is called when class is initialised\n  //--eg when new Database() is called\n  public function __construct(){\n    try{\n      $this->connection = mysqli_connect($host,$user,$password,$db);\n    }\n    catch(Exception $exc){\n      //log the exception to system error log\n      error_log($exc,0);\n    }\n  }\n  public function runQuery($query){\n    $this->params = $params;\n    //check if query is select, insert or update\n    if(strpos($query,\"SELECT\") === 0){\n      $result = $this->connection->query($query);\n      if($result->num_rows > 0){\n        //if there are results return result as an array\n        while($row = $result->fetch_assoc()){\n          array_push($this->output,$row);\n        }\n        return $this->output;\n      }\n      else{\n        //if there are no results return false\n        return false;\n      }\n    }\n  }\n}\n?>","undoManager":{"mark":-2,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":48,"column":2},"action":"insert","lines":["<?php","//this class uses parameterised query to mitigate","//SQL injection attacks. Instead of accepting a string as a query","//including its parameters, it accepts a query string containing ? in","//place of the parameters","//eg \"SELECT * FROM accounts WHERE account_id = ?\"","//Then (a)  parameter is passed to the database to replace the question mark","class Database{","  private $connection;","  private $output = array();","  private $params = array();","  ","  //database credentials and details","  private $user = \"website\";","  private $password = \"password\";","  private $host =\"localhost\";","  private $db = \"datastore\";","  ","  //--__construct is called when class is initialised","  //--eg when new Database() is called","  public function __construct(){","    try{","      $this->connection = mysqli_connect($host,$user,$password,$db);","    }","    catch(Exception $exc){","      //log the exception to system error log","      error_log($exc,0);","    }","  }","  public function runQuery($query){","    $this->params = $params;","    //check if query is select, insert or update","    if(strpos($query,\"SELECT\") === 0){","      $result = $this->connection->query($query);","      if($result->num_rows > 0){","        //if there are results return result as an array","        while($row = $result->fetch_assoc()){","          array_push($this->output,$row);","        }","        return $this->output;","      }","      else{","        //if there are no results return false","        return false;","      }","    }","  }","}","?>"],"id":1}]]},"ace":{"folds":[],"scrolltop":173,"scrollleft":0,"selection":{"start":{"row":20,"column":18},"end":{"row":20,"column":18},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1491885354543}